version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg14
    container_name: bayrol_postgres
    environment:
      POSTGRES_USER: bayrol
      POSTGRES_PASSWORD: bayrol
      POSTGRES_DB: bayrol_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bayrol"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: bayrol_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: bayrol_api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://bayrol:bayrol@postgres:5432/bayrol_db
      REDIS_URL: redis://redis:6379
      BAYROL_MQTT_HOST: www.bayrol-poolaccess.de
      BAYROL_MQTT_PORT: 8083
      SECRET_KEY: development-secret-key-change-in-production
      LOG_LEVEL: DEBUG
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bayrol_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bayrol.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    profiles:
      - debug

volumes:
  postgres_data:
  redis_data: